// /*
// Copyright 2021 The Workflows Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// */
//

// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/github/workflow_reader.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1alpha1 "github.com/nubank/workflows/pkg/apis/workflows/v1alpha1"
)

// MockWorkflowReader is a mock of WorkflowReader interface.
type MockWorkflowReader struct {
	ctrl     *gomock.Controller
	recorder *MockWorkflowReaderMockRecorder
}

// MockWorkflowReaderMockRecorder is the mock recorder for MockWorkflowReader.
type MockWorkflowReaderMockRecorder struct {
	mock *MockWorkflowReader
}

// NewMockWorkflowReader creates a new mock instance.
func NewMockWorkflowReader(ctrl *gomock.Controller) *MockWorkflowReader {
	mock := &MockWorkflowReader{ctrl: ctrl}
	mock.recorder = &MockWorkflowReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWorkflowReader) EXPECT() *MockWorkflowReaderMockRecorder {
	return m.recorder
}

// GetWorkflowContent mocks base method.
func (m *MockWorkflowReader) GetWorkflowContent(ctx context.Context, workflow *v1alpha1.Workflow, filePath, ref string) (*v1alpha1.Workflow, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWorkflowContent", ctx, workflow, filePath, ref)
	ret0, _ := ret[0].(*v1alpha1.Workflow)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWorkflowContent indicates an expected call of GetWorkflowContent.
func (mr *MockWorkflowReaderMockRecorder) GetWorkflowContent(ctx, workflow, filePath, ref interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWorkflowContent", reflect.TypeOf((*MockWorkflowReader)(nil).GetWorkflowContent), ctx, workflow, filePath, ref)
}
